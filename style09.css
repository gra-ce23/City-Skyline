/* Because of this, variables are often declared in the :root selector. This is the highest level selector in CSS; putting your variables there will make them usable everywhere. */
:root {
/* Now you have something that is resembling a building. You are ready to create your first variable. Variable declarations begin with two dashes (-) and are given a name and a value like this: --variable-name: value; */    
    --building-color1: #aa80ff;
    --building-color2: #66cc99;
    --building-color3: #cc6699;
    --building-color4: #538cc6;
    --window-color1: #bb99ff;
    --window-color2: #8cd9b3;
    --window-color3: #d98cb3;
    --window-color4: #8cb3d9;
}
* {
    box-sizing: border-box;
}
body{
    height: 100vh;
    margin: 0;
    overflow: hidden;
}
.background-buildings, .foreground-buildings{
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;
}
.building-wrap{ /* property values removed from bb1 */
    display: flex;
    flex-direction: column;
      align-items: center;
}
.window-wrap{
    display: flex;
      align-items: center;
      justify-content: space-evenly;
}
/* Give the sky class a radial-gradient. Use #ffcf33 from 0% to 20%, #ffff66 at 21%, and #bbeeff at 100%. This will add circular gradient to the background that will be your sun. */
.sky {
    background: radial-gradient(
/* This will move the start of the gradient to 15% from the top and left. It will make it end at the closest-corner and it will maintain a circle shape. These are some keywords built into gradients to describe how it behaves. */        
        closest-corner circle at 15% 15%,
        #ffcf33,
        #ffcf33 20%,
        #ffff66 21%,
        #bbeeff 100%
      );
  }
/* BACKGROUND BUILDINGS - "bb" stands for "background building" */
.bb1{
    width: 10%;
    height: 70%;
}
.bb1a{
    width: 70%;
}
.bb1b{
    width: 80%;
     
}
.bb1c{
    width: 90%;
    
}
.bb1d{
    width: 100%;
    height: 70%;
    /* remove the background-color. */
    background: linear-gradient(
             /* remove the color ORANGE to make --building-color1 solid for the top half, and then transition to --window-color1 for the bottom half. */
        var(--building-color1) 50%, /* You can specify where you want a gradient transition to complete by adding it to the color. Here, it will transition from color1 to color2 between 0% and 20% of the element and then transition to color3 for the rest. */
        var(--window-color1)
      );
}
.bb1-window{
    /* height removed from parent-bb1a */
    height: 10%;
      background-color: var(--building-color1);
/* This is the main advantage of using variables, being able to quickly change many values in your stylesheet by just changing the value of a variable. */     
/* Gradients in CSS are a way to transition between colors across the distance of an element. */
/* They are applied to the background property and the syntax looks like this:
gradient-type(
  color1,
  color2
);
In the example, color1 is solid at the top, color2 is solid at the bottom, and in between it transitions evenly from one to the next. */

      background: linear-gradient(
          var(--building-color1),
          var(--window-color1)
        );
}
.bb2{
    width: 10%;
    height: 50%;
/* You should add a fallback value to a variable by putting it as the second value of where you use the variable like this: var(--variable-name, fallback-value). The property will use the fallback value when there's a problem with the variable. */    
/* In the next few steps, you are going to use some tricks with CSS borders to turn the .bb2a section into a triangle at the top of the building. First, remove the background-color from .bb2 since you don't need it anymore. */   
}
.bb2a{
    /* remove height and width and change 1vw to 5 for left and right bottom. */
    border-bottom: 5vh solid var(--building-color2);
    border-left: 5vw solid transparent;
    border-right: 5vw solid transparent;
}
.bb2b{
    width: 100%;
    height: 100%;
/* Gradient transitions often gradually change from one color to another. You can make the change a solid line like this: */    
    background: repeating-linear-gradient( /* added repeating: This will make the four colors of your gradient repeat until it gets to the bottom of the element; giving you some stripes, and saving you from having to add a bunch of elements to create them. */
  var(--building-color2),
  var(--building-color2) 6%,
  var(--window-color2) 6%,
  var(--window-color2) 9%
);
}
.bb3{
    width: 10%;
    height: 55%;
/* fall-back didn't work.  That didn't work, because the variables you declared in .bb1 do not cascade to the .bb2 and .bb3 sibling elements. */    
/* remove background-color. */
background: repeating-linear-gradient(
    90deg,
    var(--building-color3),
    var(--building-color3),
    var(--window-color3) 15%
  );
}
.bb4{
    width: 11%;
    height: 58%;
}
.bb4a{
    width: 3%;
    height: 10%;
    background-color: var(--building-color4);
}
.bb4b{
    width: 80%;
    height: 5%;
    background-color: var(--building-color4);
}
.bb4c{
    width: 100%;
    height: 85%;
    background-color: var(--building-color4);
}
.bb4-window{
    width: 18%;
    height: 90%;
    background-color: var(--window-color4);
}
/* REMOVE IT .foreground-buildings property declarations and put in the combined selectors.*/
/* FOREGROUND BUILDINGS - "fb" stands for "foreground building" */
.fb1{
    width: 10%;
    height: 60%;
}
.fb1a{
    border-bottom: 7vh solid var(--building-color4);
    border-left: 2vw solid transparent;
  border-right: 2vw solid transparent;
}
.fb1b{
    width: 60%;
    height: 10%;
    background-color: var(--building-color4);
}
.fb1c{
    width: 100%;
    height: 80%;
    background: repeating-linear-gradient(
      90deg,
      var(--building-color4),
      var(--building-color4) 10%,
      transparent 10%,
      transparent 15%
    ),
    repeating-linear-gradient(
      var(--building-color4),
      var(--building-color4) 10%,
      var(--window-color4) 10%,
      var(--window-color4) 90%
    );
}
.fb2{
    width: 10%;
    height: 40%;
}
.fb2a{
    width: 100%;
    border-bottom: 10vh solid var(--building-color3);
  border-left: 1vw solid transparent;
    border-right: 1vw solid transparent;
}
.fb2b{
    width: 100%;
    height: 75%;
    background-color: var(--building-color3);
}
.fb2-window{
    width: 22%;
    height: 100%;
      background-color: var(--window-color3);
}
.fb3{
    width: 10%;
    height: 35%;
}
.fb3a{
    width: 80%;
    height: 15%;
    background-color: var(--building-color1);
}
.fb3b{
    width: 100%;
    height: 35%;
    background-color: var(--building-color1);
}
.fb3-window{
    width: 25%;
    height: 80%;
      background-color: var(--window-color1);
  
}
.fb4 {
    width: 8%;
    height: 45%;
    position: relative;
    left: 10%;
}
.fb4a{
    border-top: 5vh solid transparent;
    border-left: 8vw solid var(--building-color1);
} 
  .fb4b {
    width: 100%;
    height: 89%;
    background-color: var(--building-color1);
    display: flex;
    flex-wrap: wrap;
}
  .fb4-window {
    width: 30%;
    height: 10%;
    border-radius: 50%;
    background-color: var(--window-color1);
    margin: 10%;
}
.fb5{
    width: 10%;
    height: 33%;
    position: relative;
    right: 10%;
    background: repeating-linear-gradient(
        var(--building-color2),
        var(--building-color2) 5%,
        transparent 5%,
        transparent 10%
      ),
      repeating-linear-gradient(
        90deg,
      var(--building-color2),
      var(--building-color2) 12%,
      var(--window-color2) 12%,
      var(--window-color2) 44%
    );
}
.fb6{
    width: 9%;
    height: 38%;
    /* remove background-color after adding gradient. */
    background: repeating-linear-gradient(
        90deg,
        var(--building-color3),
        var(--building-color3) 10%,
        transparent 10%,
        transparent 30%
      ),
      repeating-linear-gradient(
      var(--building-color3),
      var(--building-color3) 10%,
      var(--window-color3) 10%,
      var(--window-color3) 30%
    );
}
/* A media query can be used to change styles based on certain conditions, and they look like this:

@media (condition) {

} */
@media (max-width: 1000px) {
    :root {
        --building-color1: #000;
        --building-color2: #000;
        --building-color3: #000;
          --building-color4: #000;
    }
    .sky {
      background: radial-gradient(
        closest-corner circle at 15% 15%,
    #ccc,
    #ccc 20%,
    #445 21%,
    #223 100%
  );
    }
}